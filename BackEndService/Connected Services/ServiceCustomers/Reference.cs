//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BackEndService.ServiceCustomers {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDC", Namespace="http://schemas.datacontract.org/2004/07/ServiceCustomers.DataContracts")]
    [System.SerializableAttribute()]
    internal partial class CustomerDC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CreditnumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double amountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dueDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string templateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal long Creditnumber {
            get {
                return this.CreditnumberField;
            }
            set {
                if ((this.CreditnumberField.Equals(value) != true)) {
                    this.CreditnumberField = value;
                    this.RaisePropertyChanged("Creditnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal double amount {
            get {
                return this.amountField;
            }
            set {
                if ((this.amountField.Equals(value) != true)) {
                    this.amountField = value;
                    this.RaisePropertyChanged("amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal System.DateTime dueDate {
            get {
                return this.dueDateField;
            }
            set {
                if ((this.dueDateField.Equals(value) != true)) {
                    this.dueDateField = value;
                    this.RaisePropertyChanged("dueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        internal string template {
            get {
                return this.templateField;
            }
            set {
                if ((object.ReferenceEquals(this.templateField, value) != true)) {
                    this.templateField = value;
                    this.RaisePropertyChanged("template");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceCustomers.ICusServ")]
    internal interface ICusServ {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICusServ/addCustomer", ReplyAction="http://tempuri.org/ICusServ/addCustomerResponse")]
        BackEndService.ServiceCustomers.CustomerDC addCustomer(string Name, System.DateTime dueDate, long amount, int Creditnumber, int phonenbr, string template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICusServ/addCustomer", ReplyAction="http://tempuri.org/ICusServ/addCustomerResponse")]
        System.Threading.Tasks.Task<BackEndService.ServiceCustomers.CustomerDC> addCustomerAsync(string Name, System.DateTime dueDate, long amount, int Creditnumber, int phonenbr, string template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICusServ/removeCustomer", ReplyAction="http://tempuri.org/ICusServ/removeCustomerResponse")]
        bool removeCustomer(int Creditnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICusServ/removeCustomer", ReplyAction="http://tempuri.org/ICusServ/removeCustomerResponse")]
        System.Threading.Tasks.Task<bool> removeCustomerAsync(int Creditnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICusServ/getCustomer", ReplyAction="http://tempuri.org/ICusServ/getCustomerResponse")]
        BackEndService.ServiceCustomers.CustomerDC getCustomer(int Creditnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICusServ/getCustomer", ReplyAction="http://tempuri.org/ICusServ/getCustomerResponse")]
        System.Threading.Tasks.Task<BackEndService.ServiceCustomers.CustomerDC> getCustomerAsync(int Creditnumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICusServ/editCustomer", ReplyAction="http://tempuri.org/ICusServ/editCustomerResponse")]
        BackEndService.ServiceCustomers.CustomerDC editCustomer(int Creditnumber, string template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICusServ/editCustomer", ReplyAction="http://tempuri.org/ICusServ/editCustomerResponse")]
        System.Threading.Tasks.Task<BackEndService.ServiceCustomers.CustomerDC> editCustomerAsync(int Creditnumber, string template);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICusServ/GenerateSeedData", ReplyAction="http://tempuri.org/ICusServ/GenerateSeedDataResponse")]
        void GenerateSeedData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICusServ/GenerateSeedData", ReplyAction="http://tempuri.org/ICusServ/GenerateSeedDataResponse")]
        System.Threading.Tasks.Task GenerateSeedDataAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface ICusServChannel : BackEndService.ServiceCustomers.ICusServ, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class CusServClient : System.ServiceModel.ClientBase<BackEndService.ServiceCustomers.ICusServ>, BackEndService.ServiceCustomers.ICusServ {
        
        public CusServClient() {
        }
        
        public CusServClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CusServClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CusServClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CusServClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BackEndService.ServiceCustomers.CustomerDC addCustomer(string Name, System.DateTime dueDate, long amount, int Creditnumber, int phonenbr, string template) {
            return base.Channel.addCustomer(Name, dueDate, amount, Creditnumber, phonenbr, template);
        }
        
        public System.Threading.Tasks.Task<BackEndService.ServiceCustomers.CustomerDC> addCustomerAsync(string Name, System.DateTime dueDate, long amount, int Creditnumber, int phonenbr, string template) {
            return base.Channel.addCustomerAsync(Name, dueDate, amount, Creditnumber, phonenbr, template);
        }
        
        public bool removeCustomer(int Creditnumber) {
            return base.Channel.removeCustomer(Creditnumber);
        }
        
        public System.Threading.Tasks.Task<bool> removeCustomerAsync(int Creditnumber) {
            return base.Channel.removeCustomerAsync(Creditnumber);
        }
        
        public BackEndService.ServiceCustomers.CustomerDC getCustomer(int Creditnumber) {
            return base.Channel.getCustomer(Creditnumber);
        }
        
        public System.Threading.Tasks.Task<BackEndService.ServiceCustomers.CustomerDC> getCustomerAsync(int Creditnumber) {
            return base.Channel.getCustomerAsync(Creditnumber);
        }
        
        public BackEndService.ServiceCustomers.CustomerDC editCustomer(int Creditnumber, string template) {
            return base.Channel.editCustomer(Creditnumber, template);
        }
        
        public System.Threading.Tasks.Task<BackEndService.ServiceCustomers.CustomerDC> editCustomerAsync(int Creditnumber, string template) {
            return base.Channel.editCustomerAsync(Creditnumber, template);
        }
        
        public void GenerateSeedData() {
            base.Channel.GenerateSeedData();
        }
        
        public System.Threading.Tasks.Task GenerateSeedDataAsync() {
            return base.Channel.GenerateSeedDataAsync();
        }
    }
}
